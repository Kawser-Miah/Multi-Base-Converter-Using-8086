MSGPRINT MACRO STR 
MOV DX,OFFSET STR 
MOV AH,9 
INT 21H 
ENDM

MULTIPLE_DIGIT_PRINT MACRO MM, N,INTERFACE
    MOV AX,0
    
    MOV AX,MM
    MOV BX,0
    MOV BX,N
    MOV CX,0
    MOV SI,5
    
    MMOUTPUT&INTERFACE:
       DIV BX
       ;MOV DX,0
       MOV CX,DX
       MOV DX,0
       MOV DX,AX
       ADD DX,30H
       
       MOV AH,2
       INT 21H
       
       MOV AX,0
       MOV AX,BX
       MOV DX,10
       DIV DX
       MOV BX,AX
       
       MOV AX,0       
       MOV AX,CX
       
       DEC SI       
       CMP SI,0
       JE END_MMLOOP&INTERFACE
       JMP MMOUTPUT&INTERFACE
       
       END_MMLOOP&INTERFACE:
    
    ENDM

DECIMAL_TO_BASE MACRO VALUE,N,INTERFACE
    MOV AX,0
    MOV AL,VALUE
    MOV BX,0
    MOV BL,N
    MOV SI,0
    
    DEVIDE&INTERFACE:
    DIV BL
    MOV ARRAY[SI],AH
    INC SI
    
    CMP AL,0
    JE ENDLOOP&INTERFACE
    MOV AH,0
    JMP DEVIDE&INTERFACE
    
    
    ENDLOOP&INTERFACE:
        
    
    
ENDM

BASE_TO_DECIMAL MACRO N,INTERFACE
    MOV SI,0
    MOV CX,0
    MOV CL,8
    ;MOV DI,7
    MOV DX,0
    MOV DL,0
    
    WHILE&INTERFACE:
    MOV AX,0
    MOV AL,ARRAYINPUT[SI]
    CMP AL,0
    JE BR&INTERFACE
    
    MOV BX,0
    MOV BL,N    
    MULTIPLY BL,CX,INTERFACE
    MOV BX,0
    MOV BL,ARRAYINPUT[SI]
    
    MUL BL
    ADD DL,AL
       
    
    BR&INTERFACE:
    INC SI
    
    LOOP WHILE&INTERFACE:
    
   
    MOV DECIMALINPUT,DL  
      
    
    
ENDM

MULTIPLY MACRO BASE,N,INTERFACE
    
    MOV AX,0
    MOV AL,BASE
    MOV DI,N
    ;MOV CX,N
    MOV BX,0
    MOV BL,BASE
    
    DEC DI
    CMP DI,0
    JE EN1&INTERFACE
    CMP DI,1
    JE EN&INTERFACE
    DEC DI
    
    LOOPM&INTERFACE:
    MUL BL
    DEC DI
    
    CMP DI,0
    JE EN&INTERFACE 
    JMP LOOPM&INTERFACE
    
    
    EN1&INTERFACE:
    MOV AX,0
    MOV AX,1
    
    EN&INTERFACE:
    ENDM

ARAYPRINT MACRO N,INTERFACE 
    MOV CX,0
    MOV CL,N
    MOV SI,N
    DEC SI
    
    FORL&INTERFACE:
    MOV DX,0
    MOV DL,ARRAY[SI]
    CMP DL,9
    JG ADD37H&INTERFACE
    ADD DL,30H
    JMP PRINT&INTERFACE
    
    ADD37H&INTERFACE:    
    ADD DL,37H
    
    PRINT&INTERFACE:
    MOV AH,2
    INT 21H
    
    DEC SI
    
    LOOP FORL&INTERFACE:
     
    ENDM

.MODEL SMALL
.STACK 100H
.DATA

INP DW 0  ; HELP TO TAKE DECIMAL INPUT

DECIMALINPUT DW ?
ARRAY DB 16 (?)
ARRAYINPUT DB 0,0,0,0,0,0,1,3

CHOICE DB "Please enter your choice: $"
DECIMAL DB "1.Decimal$"
BINARY DB "2.Binary$"
HEXA DB "3.HexaDecimal$"
OCTAL DB "4.OCTAL$"

INVATIDINPUT DW "You enter invalid input!!$"
DIN DW "Enter a Decimal Value: $"
DM DW "Decimal: $"
BM DW "Binary: $"
HM DW "Hexa Decimal: $"
OM DW "Octal: $"

SELECT DB ?

.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX   
          
    
    MSGPRINT DECIMAL
    CALL NEWLINE
    MSGPRINT BINARY
    CALL NEWLINE
    MSGPRINT HEXA
    CALL NEWLINE
    MSGPRINT OCTAL
    CALL NEWLINE
    MSGPRINT CHOICE
        
    CALL SINGLE_INPUT
    MOV SELECT,AL
    CMP AL,1
    JE _DECIMAL
    JL _ERROR
    CMP AL,2
    JE _BINARY
    CMP AL,3
    JE _HEXA
    CMP AL,4
    JE _OCTAL
    JG _ERROR
    
    _DECIMAL:
    CALL NEWLINE
    MSGPRINT DIN
    CALL MULTIPLE_INPUT
    
    
    MOV AX,0
    MOV AX,INP
    MOV DECIMALINPUT,AX
    
    
    _SHORT:
    CALL NEWLINE
    CALL NEWLINE
    MSGPRINT DM
    MULTIPLE_DIGIT_PRINT DECIMALINPUT,10000
    
    CALL ZERO ;INITILIZE ARRY AS 0
    ;DECIMAL_TO_BASE DECIMALINPUT,2,B ;CONVERT DECIMAL TO BINARY
    CALL NEWLINE
    MSGPRINT BM             
    ARAYPRINT 8,B
    
    CALL ZERO ;INITILIZE ARRY AS 0
    ;DECIMAL_TO_BASE DECIMALINPUT,16,H ;CONVERT DECIMAL TO HEXA
    CALL NEWLINE
    MSGPRINT HM
    ARAYPRINT 2,H
            
    CALL ZERO ;INITILIZE ARRY AS 0
    ;DECIMAL_TO_BASE DECIMALINPUT,8,O ;CONVERT DECIMAL TO OCTAL
    CALL NEWLINE
    MSGPRINT OM
    ARAYPRINT 3,O
    
    
    JMP _BREAK
    
    _BINARY:
    
    ;;;BASE_TO_DECIMAL 2,B
    
    JMP _SHORT
    ;CALL NEWLINE
   ; CALL NEWLINE
    ;MSGPRINT DM
    ;MULTIPLE_DIGIT_PRINT DECIMALINPUT,100,B_TO_D
    
    ;CALL ZERO ;INITILIZE ARRY AS 0
    ;DECIMAL_TO_BASE DECIMALINPUT,16,B_TO_H ;CONVERT DECIMAL TO HEXA
    ;CALL NEWLINE
   ; MSGPRINT HM
    ;ARAYPRINT 2,B_TO_H
    
    ;CALL ZERO ;INITILIZE ARRY AS 0
    ;DECIMAL_TO_BASE DECIMALINPUT,8,B_TO_O ;CONVERT DECIMAL TO OCTAL
    ;CALL NEWLINE
    ;MSGPRINT OM
    ;ARAYPRINT 3,B_TO_O
    
    
    
    
    JMP _BREAK
    
    _HEXA:
    ;BASE_TO_DECIMAL 16,H
    JMP _SHORT
    JMP _BREAK
    
    _OCTAL:
    ;BASE_TO_DECIMAL 8,O
    JMP _SHORT
    JMP _BREAK
    
    _ERROR:
    CALL NEWLINE
    ;MSGPRINT INVATIDINPUT
    
    _BREAK:
    
   
    
    
    
    MOV AH, 4CH
    MOV AL,00
    INT 21H
    MAIN ENDP
NEWLINE PROC
    
    MOV AH,2
    MOV DL, 13
    INT 21H
    MOV DL,10
    INT 21H
    
    RET
    NEWLINE ENDP

SINGLE_INPUT PROC
    
    MOV AH,01
    INT 21H
    
    SUB AL,30H
    RET
    SINGLE_INPUT ENDP

MULTIPLE_INPUT PROC
    
    MOV BX,0
    MOV BX,10
    MOV CX,0
    MOV SI,5
    
    MOV INP,0
    INPUT_LOOP:
    CMP SI,0
    JE  END_LOOP ;CHECK FOR OVERFLOW
    MOV AH,01
    INT 21H
    
    CMP AL,13 ;IF FIND (ENTER) THEN IT WILL OFF TAKE INPUT
    JE END_LOOP
    
    MOV AH,0    
    SUB AL,30H
    MOV CX,AX
    MOV AX,INP
    MUL BX
    ADD AX,CX
    MOV INP,AX
    
    DEC SI
    
    JMP INPUT_LOOP
    
    
    END_LOOP:
    RET
    MULTIPLE_INPUT ENDP


ZERO PROC
    MOV CX,0
    MOV CL,16
    MOV SI,0
    
    A:
    MOV ARRAY[SI],0
    INC SI
    LOOP A:
    RET
    ZERO ENDP






END MAIN